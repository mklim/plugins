def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// Load the build signing secrets from a local `keystore.properties` file.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

project.ext {
    APP_ID = "SET_ME" // <- Update this to whatever your package is in Google Play.
    KEYSTORE_STORE_FILE = rootProject.file(keystoreProperties['storeFile'])
    KEYSTORE_STORE_PASSWORD = keystoreProperties['storePassword']
    KEYSTORE_KEY_ALIAS = keystoreProperties['keyAlias']
    KEYSTORE_KEY_PASSWORD = keystoreProperties['keyPassword']
    VERSION_CODE = 1
    VERSION_NAME = "0.1"
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    signingConfigs {
        release {
            storeFile project.KEYSTORE_STORE_FILE
            storePassword project.KEYSTORE_STORE_PASSWORD
            keyAlias project.KEYSTORE_KEY_ALIAS
            keyPassword project.KEYSTORE_KEY_PASSWORD
        }
    }

    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId project.APP_ID
        minSdkVersion 16
        targetSdkVersion 27
        versionCode Integer.valueOf(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        // Google Play Billing APIs only work with apps signed for production.
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
